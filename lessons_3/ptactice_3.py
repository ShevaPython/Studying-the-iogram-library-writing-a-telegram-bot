from aiogram import Bot, Dispatcher, executor, types
from random import choice
from config import TOKEN
from funny_cat import emoji_cat
import logging

"""
–ó–∞–¥–∞—á–∏!!

1.–†–µ–∞–ª–∏–∑—É–π—Ç–µ –±–æ—Ç–∞ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å—Ç–∏–∫–µ—Ä —Å –∫–æ—Ç–∏–∫–æ–º –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /give,–Ω–æ –ø–µ—Ä–µ–¥ —ç—Ç–∏–º
–æ–Ω –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è "–°–º–æ—Ç—Ä–∏ –∫–∞–∫–æ–π —Å–º–µ—à–Ω–æ–π –∫–æ—Ç –∏ ‚ù§Ô∏è "
2.–ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞ –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —á–µ—Ä–Ω–æ–µ —Å–µ—Ä–¥–µ—á–∫–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –∫—Ä–∞—Å—Ç—Ä–æ–µ
3.–†–µ–∞–ª–∏–∑—É–π—Ç–µ –±–æ—Ç–∞ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–æ—á–∏—Ç—ã–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ  ‚úîÔ∏è –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
4.–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—É–∏—é /help –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–º–∞–Ω–¥,–æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–∞–∫ —á—Ç–æ–±—ã —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
–±—ã–ª–∏ –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º –∞ –æ–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∏–≤–æ–º
5.–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é on_startup() ,–∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –Ø –∑–∞–ø—É—Å—Ç–∏–ª—Å—è!
6.–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å id —Å—Ç–∏–∫–µ—Ä–∞ –≤ –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!

"""
HELP_COMMAND = """
<b>/help</b> - <em>—Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–º–∞–Ω–¥</em>
<b>/start</b> - <em>start bot</em>
<b>/give</b> - <em>–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–º–µ—à–Ω–æ–≥–æ –∫–æ—Ç–∞</em>

"""

logging.basicConfig(level=logging.INFO)
bot = Bot(TOKEN)
db = Dispatcher(bot)


async def on_startup(_):
    print("–Ø –∑–∞–ø—É—Å—Ç–∏–ª—Å—è")


@db.message_handler(commands=["help"])
async def send_help(message: types.Message):
    await message.answer(text=HELP_COMMAND, parse_mode="HTML")


@db.message_handler(commands=["give"])
async def send_heart(message: types.Message):
    await message.answer(text=F"–°–º–æ—Ç—Ä–∏ –∫–∞–∫–æ–π —Å–º–µ—à–Ω–æ–π –∫–æ—Ç  ‚ù§Ô∏è")
    await bot.send_sticker(message.from_user.id, sticker=choice(emoji_cat))


# @db.message_handler()
# async def send_help(message: types.Message):
#     await message.reply(text=F"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ ‚úîÔ∏è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏  == {message.text.count('‚úîÔ∏è')}")
#

# @db.message_handler()
# async def a_parrot(message: types.Message):
#     if message.text == "‚ù§Ô∏è":
#         await message.answer(text="üíã")
#     else:
#         await message.answer(text="–ü–æ–ø—Ä–æ–±—É–π –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ —Å–µ—Ä–¥–µ—á–∫–æ!)")


@db.message_handler(content_types=['sticker'])
async def send_check_id_sticker(message: types.Message):
    await message.answer(text=F"{message.sticker.file_id}")


executor.start_polling(db, skip_updates=True, on_startup=on_startup)
